<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="140" height="754" xmlns:ns1="myriadLands.ui.buttons.*" backgroundAlpha="0.0"
	creationComplete="init();">
	<mx:Grid horizontalGap="5" verticalGap="5" id="grid" x="6" y="6">
		<mx:GridRow width="100%" height="100%">
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit1" click="onUnitSelected(event);"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit2" click="onUnitSelected(event);"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="100%">
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit3" click="onUnitSelected(event);"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit4" click="onUnitSelected(event);"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="100%">
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit5" click="onUnitSelected(event);"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit6" click="onUnitSelected(event);"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="100%">
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit7" click="onUnitSelected(event);"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit8" click="onUnitSelected(event);"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="100%">
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit9" click="onUnitSelected(event);">
				</ns1:SquareButton>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit10" click="onUnitSelected(event);">
				</ns1:SquareButton>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="100%">
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit11" click="onUnitSelected(event);"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%">
				<ns1:SquareButton width="64" height="64" id="unit12" click="onUnitSelected(event);"/>
			</mx:GridItem>
		</mx:GridRow>
	</mx:Grid>
	<mx:Canvas id="championPanel" y="458" x="6">
		<mx:Canvas y="0" x="0" backgroundColor="0xcc9933" width="100%" height="16"/>
		<ns1:SquareButton width="134" height="271" y="20" x="0" id="championBG"/>
		<ns1:SquareButton width="128" height="128" y="24" x="3" id="champion" click="onChampionSquadSelected(event);"/>
		<ns1:SquareButton width="60" height="60" y="160" x="5" id="equipment1" click="onEquipmentSelected(event);"/>
		<ns1:SquareButton width="60" height="60" y="160" x="69" id="equipment2" click="onEquipmentSelected(event);"/>
		<ns1:SquareButton width="60" height="60" y="225" x="5" id="equipment3" click="onEquipmentSelected(event);"/>
		<ns1:SquareButton width="60" height="60" y="225" x="69" id="equipment4" click="onEquipmentSelected(event);"/>
		<mx:ProgressBar x="7" y="134.4" width="120" height="13" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="squadLifBar"/>
	</mx:Canvas>
	<mx:ProgressBar x="8" y="56.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar1"/>
	<mx:ProgressBar x="77" y="56.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar2"/>
	<mx:ProgressBar x="8" y="125.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar3"/>
	<mx:ProgressBar x="77" y="125.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar4"/>
	<mx:ProgressBar x="8" y="194.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar5"/>
	<mx:ProgressBar x="77" y="194.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar6"/>
	<mx:ProgressBar x="8" y="263.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar7"/>
	<mx:ProgressBar x="77" y="263.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar8"/>
	<mx:ProgressBar x="8" y="332.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar9"/>
	<mx:ProgressBar x="77" y="332.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar10"/>
	<mx:ProgressBar x="8" y="401.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar11"/>
	<mx:ProgressBar x="77" y="401.25" width="56" height="6.75" mode="manual" label=" " indeterminate="false" enabled="true" labelPlacement="center" barColor="0xcc9933" id="unitLifBar12"/>
	<mx:Script>
		<![CDATA[
			import myriadLands.actions.GateCombatAction;
			import myriadLands.events.EntityEvent;
			import myriadLands.actions.ActionView;
			import myriadLands.entities.CombatGround;
			import myriadLands.ui.asComponents.CombatMapTile;
			import gamestone.utils.NumberUtil;
			import myriadLands.entities.Entity;
			import myriadLands.entities.Squad;
			import myriadLands.actions.CentralManager;
			import myriadLands.entities.Unit;
			import myriadLands.entities.Equipment;
			
			private const UNIT_OFFSET:int = 20;
			private const EQUIPMENT_OFFSET:int = 8; 
			
			private var _championSquad:Squad;
			
			private function init():void {
				championBG.enabled = false;
			}
			
			protected function reset():void {
				var i:int;
				for (i = 1; i < 13; i++) {
					this["unit" + i].visible = false;
					this["unit" + i].alpha = 1;
					this["unit" + i].enabled = true;
					this["unitLifBar" + i].visible = false;
					this["unitLifBar" + i].alpha = 1;
				}
				
				for (i = 1; i < 5; i++)
					getEquipmentSquareButton("equipment" + i).visible = false;
				
			}
			
			public function setSquad(championSquad:Squad):void {
				reset();
				_championSquad = championSquad;
				setSquadEntity(championSquad);
									
				var equipment:Array = championSquad.getEquipment();
				var equ:Equipment;
				var units:Array = championSquad.getUnits();
				var unit:Unit;
				var sqb:SquareButton;
				var index:int = 0;
				for each(unit in units) {
					index++;
					setUnit(index, unit);
				}
				index = (index % 2 == 1) ? index + 1 : index;
				
				championPanel.y = index * 0.5 * (64 + parseInt(grid.getStyle("verticalGap"))) + UNIT_OFFSET;
				 
				index = 0;
				for each(equ in equipment) {
					index++;
					setEquipment(index, equ);
				}
				index = (index % 2 == 1) ? index + 1 : index;
				championBG.height = champion.height + (60 * index * 0.5) + EQUIPMENT_OFFSET;
			}
			
			public function setSquadEntity(squad:Squad):void {
				champion.setEntity(squad);
				squadLifBar.setProgress(squad.lif, squad.data.attributes.lif);
				squadLifBar.label = String(squad.lif);
				squad.addEventListener(EntityEvent.LIF_CHANGED, onSquadLifChanged, false, 0, true);
			}
			
			public function setUnit(index:int, unit:Unit):void {
				var sqb:SquareButton = this["unit" + index] as SquareButton;
				var sqh:ProgressBar = this["unitLifBar" + index];
				sqb.setEntity(unit);
				sqb.visible = true;
				sqh.setProgress(unit.lif, unit.data.attributes.lif);
				sqh.label = String(unit.lif);
				sqh.visible = true;
				unit.addEventListener(EntityEvent.LIF_CHANGED, onUnitLifChanged, false, 0, true);
			}
			
			public function setEquipment(index:int, equ:Equipment):void {
				var sqb:SquareButton = championPanel.getChildByName("equipment" + index) as SquareButton;
				sqb.setEntity(equ);
				sqb.visible = true;
			}
			//EVENTS
			protected function onSquadLifChanged(e:EntityEvent):void {
				squadLifBar.setProgress(e.entity.lif, e.entity.data.attributes.lif);
				squadLifBar.label = String(e.entity.lif);
				if (e.entity.lif <= 0) {
					champion.alpha = 0.5;
					champion.enabled = false;
					squadLifBar.alpha = 0.5;
				}
			}
			protected function onUnitLifChanged(e:EntityEvent):void {
				var sq:SquareButton;
				var unitLifBar:ProgressBar;
				var len:int = _championSquad.getUnits().length;
				for (var i:int = 1; i <= len ; i++) {
					sq = this["unit" + i] as SquareButton;
					if (sq.getEntity() == e.entity) {
						unitLifBar = (this["unitLifBar" + i] as ProgressBar);
						unitLifBar.setProgress(e.entity.lif, e.entity.data.attributes.lif);
						unitLifBar.label = String(e.entity.lif);
						if (e.entity.lif <= 0) {
							sq.alpha = 0.5;
							sq.enabled = false;
							unitLifBar.alpha = 0.5;
						}
					}
				}
			}
			protected function onChampionSquadSelected(e:MouseEvent):void {
				_championSquad.fireSelectedEvent(ActionView.SELECTION_PANEL);
				if (_championSquad.parentEntity != null) 
					(_championSquad.parentEntity as CombatGround).combatMapTile.scrollToMe();
			}
			protected function onUnitSelected(e:MouseEvent):void {
				var unit:Unit = (e.currentTarget as SquareButton).getEntity() as Unit;
				unit.fireSelectedEvent(ActionView.SELECTION_PANEL);
				if (unit.parentEntity != null) 
					(unit.parentEntity as CombatGround).combatMapTile.scrollToMe();
			}
			protected function onEquipmentSelected(e:MouseEvent):void {
				var equ:Equipment = (e.currentTarget as SquareButton).getEntity() as Equipment;
				equ.fireSelectedEvent(ActionView.SELECTION_PANEL);
			}
			
			//GETTERS
			protected function getUnitSquareButton(name:String):SquareButton {return getChildByName(name) as SquareButton}
			protected function getEquipmentSquareButton(name:String):SquareButton {return championPanel.getChildByName(name) as SquareButton}
		]]>
	</mx:Script>
</mx:Canvas>
